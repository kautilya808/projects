from idlelib import window
import tkinter

import pyttsx3
import pandas as pd
from sklearn import \
    preprocessing
from sklearn.neighbors import KNeighborsClassifier
import numpy as np
import PySimpleGUI as sg

temp=0
excel = pd.read_excel('Crop.xlsx', header=0)
print(excel)
print(excel.shape)

engine = pyttsx3.init('sapi5')
voices = engine.getProperty('voices')
rate = engine.getProperty('rate')
engine.setProperty('rate', rate - 20)
engine.setProperty('voice', voices[0].id)


def speak(
        audio):
    engine.say(audio)
    engine.runAndWait()


le = preprocessing.LabelEncoder()
crop = le.fit_transform(list(excel["CROP"]))

NITROGEN = list(excel["NITROGEN"])
PHOSPHORUS = list(excel["PHOSPHORUS"])
POTASSIUM = list(excel["POTASSIUM"])
TEMPERATURE = list(
    excel["TEMPERATURE"])
HUMIDITY = list(excel["HUMIDITY"])
PH = list(excel["PH"])
RAINFALL = list(excel["RAINFALL"])

features = list(
    zip(NITROGEN, PHOSPHORUS, POTASSIUM, TEMPERATURE, HUMIDITY, PH, RAINFALL))
features = np.array([NITROGEN, PHOSPHORUS, POTASSIUM, TEMPERATURE, HUMIDITY, PH,
                     RAINFALL])

features = features.transpose()
print(features.shape)
print(
    crop.shape)

model = KNeighborsClassifier(
    n_neighbors=3)
model.fit(features,
          crop)
import customtkinter

def login():
 global temp
 while True:
    crop_name = str()
    cp = str()

    nitrogen_content = entry1.get()
    phosphorus_content = entry2.get()
    potassium_content = entry3.get()
    temperature_content = entry4.get()
    humidity_content = entry5.get()
    ph_content = entry6.get()
    rainfall = entry7.get()
    predict1 = np.array([nitrogen_content, phosphorus_content, potassium_content, temperature_content, humidity_content, ph_content,rainfall], dtype=float)
    print(predict1)
    predict1 = predict1.reshape(1,-1)
    print(predict1)
    predict1 = model.predict(predict1)
    print(predict1)

    if predict1 == 0:
        temp=0
        crop_name = 'Apple(सेब)'
        cp="No alternatives"
    elif predict1 == 1:
        temp=1
        crop_name = 'Banana(केला)'
        cp='Coconut'
    elif predict1 == 2:
        temp = 2
        crop_name = 'Blackgram(काला चना)'
        cp='No alternative'
    elif predict1 == 3:
        temp = 3
        crop_name = 'Chickpea(काबुली चना)'
        cp="GreenPeas,Soyabeans"
    elif predict1 == 4:
        temp = 4
        crop_name = 'Coconut(नारियल)'
        cp = 'Banana,Pepper'
    elif predict1 == 5:
        temp = 5
        crop_name = 'Coffee(कॉफ़ी)'
        cp='Black Pepper,Cardamom'
    elif predict1 == 6:
        temp = 6
        crop_name = 'Cotton(कपास)'
        cp='Mung seeds,Peas'
    elif predict1 == 7:
        temp = 7
        crop_name = 'Grapes(अंगूर)'
        cp='Clover Plants'
    elif predict1 == 8:
        temp = 8
        crop_name = 'Jute(जूट)'
        cp='No alternatives'
    elif predict1 == 9:
        temp = 9
        crop_name = 'Kidneybeans(राज़में)'
        cp='No alternatives'
    elif predict1 == 10:
        temp = 10
        crop_name = 'Lentil(मसूर की दाल)'
        cp='jowar'
    elif predict1 == 11:
        temp = 11
        crop_name = 'Maize(मक्का)'
        cp='Bajra'
    elif predict1 == 12:
        temp = 12
        crop_name = 'Mango(आम)'
        cp='Lemon,Guava'
    elif predict1 == 13:
        temp = 13
        crop_name = 'Mothbeans(मोठबीन)'
        cp='Cotton'
    elif predict1 == 14:
        temp = 14
        crop_name = 'Mungbeans(मूंग)'
    elif predict1 == 15:
        temp = 15
        crop_name = 'Muskmelon(खरबूजा)'
        cp='Cucumber,Watermelon'
    elif predict1 == 16:
        temp = 16
        crop_name = 'Orange(संतरा)'
        cp='Soyabeans,Peas'
    elif predict1 == 17:
        temp = 17
        crop_name = 'Papaya(पपीता)'
        cp='Potatoes,Onions,Carrots'
    elif predict1 == 18:
        temp = 18
        crop_name = 'Pigeonpeas(कबूतर के मटर)'
        cp='Green Lentils'
    elif predict1 == 19:
        temp = 19
        crop_name = 'Pomegranate(अनार)'
        cp='No alternative'
    elif predict1 == 20:
        temp = 20
        crop_name = 'Rice(चावल)'
        cp="raagi,sajji"
    elif predict1 == 21:
        temp = 21
        crop_name = 'Watermelon(तरबूज)'
        cp='Muskmelon,Tomatoes,Chillies'
    if int(humidity_content) >= 1 and int(
            humidity_content) <= 33:
        humidity_level = 'low humid'
    elif int(humidity_content) >= 34 and int(humidity_content) <= 66:
        humidity_level = 'medium humid'
    else:
        humidity_level = 'high humid'

    if int(temperature_content) >= 0 and int(
            temperature_content) <= 6:
        temperature_level = 'cool'
    elif int(temperature_content) >= 7 and int(temperature_content) <= 25:
        temperature_level = 'warm'
    else:
        temperature_level = 'hot'

    if int(rainfall) >= 1 and int(
            rainfall) <= 100:
        rainfall_level = 'less'
    elif int(rainfall) >= 101 and int(rainfall) <= 200:
        rainfall_level = 'moderate'
    elif int(rainfall) >= 201:
        rainfall_level = 'heavy rain'

    if int(nitrogen_content) >= 1 and int(
            nitrogen_content) <= 50:
        nitrogen_level = 'less'
    elif int(nitrogen_content) >= 51 and int(nitrogen_content) <= 100:
        nitrogen_level = 'not to less but also not to high'
    elif int(nitrogen_content) >= 101:
        nitrogen_level = 'high'

    if int(phosphorus_content) >= 1 and int(
            phosphorus_content) <= 50:
        phosphorus_level = 'less'
    elif int(phosphorus_content) >= 51 and int(phosphorus_content) <= 100:
        phosphorus_level = 'not to less but also not to high'
    elif int(phosphorus_content) >= 101:
        phosphorus_level = 'high'

    if int(potassium_content) >= 1 and int(
            potassium_content) <= 50:
        potassium_level = 'less'
    elif int(potassium_content) >= 51 and int(potassium_content) <= 100:
        potassium_level = 'not to less but also not to high'
    elif int(potassium_content) >= 101:
        potassium_level = 'high'

    if float(ph_content) >= 0 and float(ph_content) <= 5:
        phlevel = 'acidic'
    elif float(ph_content) >= 6 and float(ph_content) <= 8:
        phlevel = 'neutral'
    elif float(ph_content) >= 9 and float(ph_content) <= 14:
        phlevel = 'alkaline'

    print(crop_name)
    print(humidity_level)
    print(temperature_level)
    print(rainfall_level)
    print(nitrogen_level)
    print(phosphorus_level)
    print(potassium_level)
    print(phlevel)

    screen.configure(text=crop_name)
    screen1.configure(text=cp)

    speak(
        "Sir according to the data that you provided to me. The ratio of nitrogen in the soil is  " + nitrogen_level + ". The ratio of phosphorus in the soil is  " + phosphorus_level + ". The ratio of potassium in the soil is  " + potassium_level + ". The temperature level around the field is  " + temperature_level + ". The humidity level around the field is  " + humidity_level + ". The ph type of the soil is  " + phlevel + ". The amount of rainfall is  " + rainfall_level)  # Making our program to speak about the data that it has received about the crop in front of the user.

    speak("The best crop that you can grow is  " + crop_name)
    speak("The other alternatives are " + cp)
    break

print(temp)

# importing required modules
import tkinter
import customtkinter
from PIL import ImageTk, Image

customtkinter.set_appearance_mode("light")  # Modes: system (default), light, dark
customtkinter.set_default_color_theme("green")  # Themes: blue (default), dark-blue, green

app = customtkinter.CTk()  # creating cutstom tkinter window
app.geometry("2000x2000")
app.title('CropAI')


def button_function():
    import matplotlib.pyplot as plt

    file = pd.read_excel('datafile.xlsx')
    if temp == 0:
        y_axis = file['Apple(सेब)']
        x_axis = file['Year']
        plt.bar(x_axis, y_axis, width=5)
        plt.xlabel("Year")
        plt.ylabel("Yield")
        plt.show()
    elif temp == 1:
        y_axis = file['Banana(केला)']
        x_axis = file['Year']
        plt.bar(x_axis, y_axis, width=5)
        plt.xlabel("Year")
        plt.ylabel("Yield")
        plt.show()
    elif temp == 2:
        y_axis = file['Blackgram(काला चना)']
        x_axis = file['Year']
        plt.bar(x_axis, y_axis, width=5)
        plt.xlabel("Year")
        plt.ylabel("Yield")
        plt.show()
    elif temp == 3:
        y_axis = file['Chickpea(काबुली चना)']
        x_axis = file['Year']
        plt.bar(x_axis, y_axis, width=5)
        plt.xlabel("Year")
        plt.ylabel("Yield")
        plt.show()
    elif temp == 4:
        y_axis = file['Coconut(नारियल)']
        x_axis = file['Year']
        plt.bar(x_axis, y_axis, width=5)
        plt.xlabel("Year")
        plt.ylabel("Yield")
        plt.show()
    elif temp == 5:
        y_axis = file['Coffee(कॉफ़ी)']
        x_axis = file['Year']
        plt.bar(x_axis, y_axis, width=5)
        plt.xlabel("Year")
        plt.ylabel("Yield")
        plt.show()
    elif temp == 6:
        y_axis = file['Cotton(कपास)']
        x_axis = file['Year']
        plt.bar(x_axis, y_axis, width=5)
        plt.xlabel("Year")
        plt.ylabel("Yield")
        plt.show()
    elif temp == 7:
        y_axis = file['Grapes(अंगूर)']
        x_axis = file['Year']
        plt.bar(x_axis, y_axis, width=5)
        plt.xlabel("Year")
        plt.ylabel("Yield")
        plt.show()
    elif temp == 8:
        y_axis = file['Jute(जूट)']
        x_axis = file['Year']
        plt.bar(x_axis, y_axis, width=5)
        plt.xlabel("Year")
        plt.ylabel("Yield")
        plt.show()
    elif temp == 9:
        y_axis = file['Kidneybeans(राज़में)']
        x_axis = file['Year']
        plt.bar(x_axis, y_axis, width=5)
        plt.xlabel("Year")
        plt.ylabel("Yield")
        plt.show()
    elif temp == 10:
        y_axis = file['Lentil(मसूर की दाल)']
        x_axis = file['Year']
        plt.bar(x_axis, y_axis, width=5)
        plt.xlabel("Year")
        plt.ylabel("Yield")
        plt.show()
    elif temp == 11:
        y_axis = file['Maize(मक्का)']
        x_axis = file['Year']
        plt.bar(x_axis, y_axis, width=5)
        plt.xlabel("Year")
        plt.ylabel("Yield")
        plt.show()
    elif temp == 12:
        y_axis = file['Mango(आम)']
        x_axis = file['Year']
        plt.bar(x_axis, y_axis, width=5)
        plt.xlabel("Year")
        plt.ylabel("Yield")
        plt.show()
    elif temp == 13:
        y_axis = file['Mothbeans(मोठबीन)']
        x_axis = file['Year']
        plt.bar(x_axis, y_axis, width=5)
        plt.xlabel("Year")
        plt.ylabel("Yield")
        plt.show()
    elif temp == 14:
        y_axis = file['Mungbeans(मूंग)']
        x_axis = file['Year']
        plt.bar(x_axis, y_axis, width=5)
        plt.xlabel("Year")
        plt.ylabel("Yield")
        plt.show()
    elif temp == 15:
        y_axis = file['Muskmelon(खरबूजा)']
        x_axis = file['Year']
        plt.bar(x_axis, y_axis, width=5)
        plt.xlabel("Year")
        plt.ylabel("Yield")
        plt.show()
    elif temp == 16:
        y_axis = file['Orange(संतरा)']
        x_axis = file['Year']
        plt.bar(x_axis, y_axis, width=5)
        plt.xlabel("Year")
        plt.ylabel("Yield")
        plt.show()
    elif temp == 17:
        y_axis = file['Papaya(पपीता)']
        x_axis = file['Year']
        plt.bar(x_axis, y_axis, width=5)
        plt.xlabel("Year")
        plt.ylabel("Yield")
        plt.show()
    elif temp == 18:
        y_axis = file['Pigeonpeas(कबूतर के मटर)']
        x_axis = file['Year']
        plt.bar(x_axis, y_axis, width=5)
        plt.xlabel("Year")
        plt.ylabel("Yield")
        plt.show()
    elif temp == 19:
        y_axis = file['Pomegranate(अनार)']
        x_axis = file['Year']
        plt.bar(x_axis, y_axis, width=5)
        plt.xlabel("Year")
        plt.ylabel("Yield")
        plt.show()
    elif temp == 20:
        y_axis = file['Rice(चावल)']
        x_axis = file['Year']
        plt.bar(x_axis, y_axis, width=5)
        plt.xlabel("Year")
        plt.ylabel("Yield")
        plt.show()
    elif temp == 21:
        y_axis = file['Watermelon(तरबूज)']
        x_axis = file['Year']
        plt.bar(x_axis, y_axis, width=5)
        plt.xlabel("Year")
        plt.ylabel("Yield")
        plt.show()



img1 = ImageTk.PhotoImage(Image.open("cr.jpg"))
l1 = customtkinter.CTkLabel(master=app, image=img1)
l1.pack()

# creating custom frame
frame = customtkinter.CTkFrame(master=l1, width=800, height=700, corner_radius=15)
frame.place(relx=0.7, rely=0.5, anchor=tkinter.CENTER)

root=frame
label = customtkinter.CTkLabel(master= frame, text="CROP AI",font=('arial',30,"bold"))
label.place(y=60,x=320)
product_label = customtkinter.CTkLabel(root,text="Ratio of nitrogen:",font=('arial',20,'bold'))
product_label.place(x=30,y=170)

entry1 = customtkinter.CTkEntry(master=frame, placeholder_text="eg:62")
entry1.place(x=225, y=170)

product_label1 = customtkinter.CTkLabel(root,text="Ratio of phosphorus:",font=('arial',18,'bold'))
product_label1.place(x=30,y=220)

entry2 = customtkinter.CTkEntry(master=frame, placeholder_text="eg:50")
entry2.place(x=225, y=220)

product_label2 = customtkinter.CTkLabel(root,text="Ratio of pottasium:",font=('arial',18,'bold'))
product_label2.place(x=30,y=270)

entry3 = customtkinter.CTkEntry(master=frame, placeholder_text="eg:20")
entry3.place(x=225, y=270)

product_label3 = customtkinter.CTkLabel(root,text="Avg Temperature:",font=('arial',18,'bold'))
product_label3.place(x=30,y=320)

entry4 = customtkinter.CTkEntry(master=frame, placeholder_text="eg:25")
entry4.place(x=225, y=320)

product_label = customtkinter.CTkLabel(root,text="Humidity:",font=('arial',18,'bold'))
product_label.place(x=30,y=370)

entry5 = customtkinter.CTkEntry(master=frame, placeholder_text="eg:50")
entry5.place(x=225, y=370)

product_label = customtkinter.CTkLabel(root,text=" Ph:",font=('arial',18,'bold'))
product_label.place(x=30,y=420)
entry6 = customtkinter.CTkEntry(master=frame, placeholder_text="eg:7")
entry6.place(x=225, y=420)

product_label = customtkinter.CTkLabel(root,text="Rainfall:",font=('arial',18,'bold'))
product_label.place(x=30,y=470)
entry7 = customtkinter.CTkEntry(master=frame, placeholder_text="eg:60")
entry7.place(x=225, y=470)
screen = customtkinter.CTkLabel(master=root,text="Crop",font=('arial',20,'bold'))
screen.place(x=550,y=250)
screen1 = customtkinter.CTkLabel(master=root,text="Alternate Crop",font=('arial',20,'bold'))
screen1.place(x=520,y=350)

product_label = customtkinter.CTkLabel(root,text="0-145ppm",font=('arial',15,'italic'))
product_label.place(x=370,y=170)
product_label = customtkinter.CTkLabel(root,text="5-90pp",font=('arial',15,'italic'))
product_label.place(x=370,y=220)
product_label = customtkinter.CTkLabel(root,text="5-205",font=('arial',15,'italic'))
product_label.place(x=370,y=270)
product_label = customtkinter.CTkLabel(root,text="9-44C",font=('arial',15,'italic'))
product_label.place(x=370,y=320)
product_label = customtkinter.CTkLabel(root,text="14-100",font=('arial',15,'italic'))
product_label.place(x=370,y=370)
product_label = customtkinter.CTkLabel(root,text="4-10",font=('arial',15,'italic'))
product_label.place(x=370,y=420)
product_label = customtkinter.CTkLabel(root,text="20-299mm",font=('arial',15,'italic'))
product_label.place(x=370,y=470)


button1 = customtkinter.CTkButton(master=frame, width=220, text="Submit", command=login, corner_radius=6)
button1.place(x=100, y=600)
button2 = customtkinter.CTkButton(master=frame, width=220, text="graphs", command=button_function, corner_radius=6)
button2.place(x=500, y=600)



app.mainloop()